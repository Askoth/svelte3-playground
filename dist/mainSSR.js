'use strict';

var internal = require('svelte/internal');

/* src/foo.html generated by Svelte v3.12.1 */

const Foo = internal.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	console.log("We are now at foo");

	return `this is foo`;
});

/* src/bar.html generated by Svelte v3.12.1 */

const css = {
	code: ".button.svelte-1t0ylgc{background-color:darkgreen;color:white}",
	map: "{\"version\":3,\"file\":\"bar.html\",\"sources\":[\"bar.html\"],\"sourcesContent\":[\"<div>this is bar {check}</div>\\n\\n<button class=\\\"button\\\" on:click={something}>click me!</button>\\n\\n<div>Clicked {num} times.</div>\\n\\n<dl>\\n  <dt>Derivative:</dt>\\n  <dd>{myDerivative}</dd>\\n</dl>\\n\\n<script>\\n\\n  console.log(\\\"We are now at bar\\\")\\n\\n  let check = \\\"not clicked\\\";\\n  let num = 0;\\n\\n  $: myDerivative = `${check} ${num}`;\\n\\n  function something() {\\n    check = \\\"clicked\\\";\\n    num++;\\n  }\\n</script>\\n\\n<style>\\n  .button {\\n    background-color: darkgreen;\\n    color: white;\\n  }\\n</style>\\n\"],\"names\":[],\"mappings\":\"AA2BE,OAAO,eAAC,CAAC,AACP,gBAAgB,CAAE,SAAS,CAC3B,KAAK,CAAE,KAAK,AACd,CAAC\"}"
};

const Bar = internal.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	console.log("We are now at bar");

  let check = "not clicked";
  let num = 0;

	$$result.css.add(css);

	let myDerivative = `${check} ${num}`;

	return `<div>this is bar ${internal.escape(check)}</div>

	<button class="button svelte-1t0ylgc">click me!</button>

	<div>Clicked ${internal.escape(num)} times.</div>

	<dl>
	  <dt>Derivative:</dt>
	  <dd>${internal.escape(myDerivative)}</dd>
	</dl>`;
});

/* src/main.html generated by Svelte v3.12.1 */

const Main = internal.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  let { test, path } = $$props;

  let currentSelection;

  switch (path) {
    case "/bar":
      currentSelection = Bar;
      break;
    default:
      currentSelection = Foo;
      break;
  }

	if ($$props.test === void 0 && $$bindings.test && test !== void 0) $$bindings.test(test);
	if ($$props.path === void 0 && $$bindings.path && path !== void 0) $$bindings.path(path);

	return `hello world ${internal.escape(test)}

	${internal.validate_component(((currentSelection) || internal.missing_component), 'svelte:component').$$render($$result, {}, {}, {})}`;
});

module.exports = Main;
